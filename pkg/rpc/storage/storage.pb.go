// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/rpc/storage/storage.proto

package storage

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetReq struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReq) Reset()         { *m = GetReq{} }
func (m *GetReq) String() string { return proto.CompactTextString(m) }
func (*GetReq) ProtoMessage()    {}
func (*GetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f79a92fe24a0fd34, []int{0}
}

func (m *GetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReq.Unmarshal(m, b)
}
func (m *GetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReq.Marshal(b, m, deterministic)
}
func (m *GetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReq.Merge(m, src)
}
func (m *GetReq) XXX_Size() int {
	return xxx_messageInfo_GetReq.Size(m)
}
func (m *GetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetReq proto.InternalMessageInfo

func (m *GetReq) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type GetResp struct {
	Val                  []byte   `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	Found                bool     `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResp) Reset()         { *m = GetResp{} }
func (m *GetResp) String() string { return proto.CompactTextString(m) }
func (*GetResp) ProtoMessage()    {}
func (*GetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f79a92fe24a0fd34, []int{1}
}

func (m *GetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResp.Unmarshal(m, b)
}
func (m *GetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResp.Marshal(b, m, deterministic)
}
func (m *GetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResp.Merge(m, src)
}
func (m *GetResp) XXX_Size() int {
	return xxx_messageInfo_GetResp.Size(m)
}
func (m *GetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetResp proto.InternalMessageInfo

func (m *GetResp) GetVal() []byte {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *GetResp) GetFound() bool {
	if m != nil {
		return m.Found
	}
	return false
}

type PutReq struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val                  []byte   `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutReq) Reset()         { *m = PutReq{} }
func (m *PutReq) String() string { return proto.CompactTextString(m) }
func (*PutReq) ProtoMessage()    {}
func (*PutReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f79a92fe24a0fd34, []int{2}
}

func (m *PutReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutReq.Unmarshal(m, b)
}
func (m *PutReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutReq.Marshal(b, m, deterministic)
}
func (m *PutReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutReq.Merge(m, src)
}
func (m *PutReq) XXX_Size() int {
	return xxx_messageInfo_PutReq.Size(m)
}
func (m *PutReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PutReq.DiscardUnknown(m)
}

var xxx_messageInfo_PutReq proto.InternalMessageInfo

func (m *PutReq) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PutReq) GetVal() []byte {
	if m != nil {
		return m.Val
	}
	return nil
}

type PutResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResp) Reset()         { *m = PutResp{} }
func (m *PutResp) String() string { return proto.CompactTextString(m) }
func (*PutResp) ProtoMessage()    {}
func (*PutResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f79a92fe24a0fd34, []int{3}
}

func (m *PutResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResp.Unmarshal(m, b)
}
func (m *PutResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResp.Marshal(b, m, deterministic)
}
func (m *PutResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResp.Merge(m, src)
}
func (m *PutResp) XXX_Size() int {
	return xxx_messageInfo_PutResp.Size(m)
}
func (m *PutResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResp.DiscardUnknown(m)
}

var xxx_messageInfo_PutResp proto.InternalMessageInfo

type DelReq struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelReq) Reset()         { *m = DelReq{} }
func (m *DelReq) String() string { return proto.CompactTextString(m) }
func (*DelReq) ProtoMessage()    {}
func (*DelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f79a92fe24a0fd34, []int{4}
}

func (m *DelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelReq.Unmarshal(m, b)
}
func (m *DelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelReq.Marshal(b, m, deterministic)
}
func (m *DelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelReq.Merge(m, src)
}
func (m *DelReq) XXX_Size() int {
	return xxx_messageInfo_DelReq.Size(m)
}
func (m *DelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelReq proto.InternalMessageInfo

func (m *DelReq) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type DelResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelResp) Reset()         { *m = DelResp{} }
func (m *DelResp) String() string { return proto.CompactTextString(m) }
func (*DelResp) ProtoMessage()    {}
func (*DelResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f79a92fe24a0fd34, []int{5}
}

func (m *DelResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelResp.Unmarshal(m, b)
}
func (m *DelResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelResp.Marshal(b, m, deterministic)
}
func (m *DelResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelResp.Merge(m, src)
}
func (m *DelResp) XXX_Size() int {
	return xxx_messageInfo_DelResp.Size(m)
}
func (m *DelResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DelResp.DiscardUnknown(m)
}

var xxx_messageInfo_DelResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetReq)(nil), "storage.GetReq")
	proto.RegisterType((*GetResp)(nil), "storage.GetResp")
	proto.RegisterType((*PutReq)(nil), "storage.PutReq")
	proto.RegisterType((*PutResp)(nil), "storage.PutResp")
	proto.RegisterType((*DelReq)(nil), "storage.DelReq")
	proto.RegisterType((*DelResp)(nil), "storage.DelResp")
}

func init() { proto.RegisterFile("pkg/rpc/storage/storage.proto", fileDescriptor_f79a92fe24a0fd34) }

var fileDescriptor_f79a92fe24a0fd34 = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2d, 0xc8, 0x4e, 0xd7,
	0x2f, 0x2a, 0x48, 0xd6, 0x2f, 0x2e, 0xc9, 0x2f, 0x4a, 0x4c, 0x4f, 0x85, 0xd1, 0x7a, 0x05, 0x45,
	0xf9, 0x25, 0xf9, 0x42, 0xec, 0x50, 0xae, 0x92, 0x14, 0x17, 0x9b, 0x7b, 0x6a, 0x49, 0x50, 0x6a,
	0xa1, 0x90, 0x00, 0x17, 0x73, 0x76, 0x6a, 0xa5, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x4f, 0x10, 0x88,
	0xa9, 0x64, 0xc8, 0xc5, 0x0e, 0x96, 0x2b, 0x2e, 0x00, 0x49, 0x96, 0x25, 0xe6, 0xc0, 0x24, 0xcb,
	0x12, 0x73, 0x84, 0x44, 0xb8, 0x58, 0xd3, 0xf2, 0x4b, 0xf3, 0x52, 0x24, 0x98, 0x14, 0x18, 0x35,
	0x38, 0x82, 0x20, 0x1c, 0x25, 0x1d, 0x2e, 0xb6, 0x80, 0x52, 0xec, 0xc6, 0xc1, 0xcc, 0x60, 0x82,
	0x9b, 0xa1, 0xc4, 0xc9, 0xc5, 0x0e, 0x56, 0x5d, 0x5c, 0x00, 0x72, 0x87, 0x4b, 0x6a, 0x0e, 0x76,
	0x77, 0x70, 0x72, 0xb1, 0x83, 0xe5, 0x8a, 0x0b, 0x8c, 0x7a, 0x19, 0xb9, 0xd8, 0x83, 0x21, 0x4e,
	0x17, 0xd2, 0xe2, 0x62, 0x76, 0x4f, 0x2d, 0x11, 0xe2, 0xd7, 0x83, 0x79, 0x0d, 0xe2, 0x11, 0x29,
	0x01, 0x54, 0x81, 0xe2, 0x02, 0x25, 0x06, 0x90, 0xda, 0x80, 0x52, 0x64, 0xb5, 0x10, 0x57, 0x22,
	0xa9, 0x85, 0x39, 0x04, 0xac, 0xd6, 0x25, 0x35, 0x07, 0x49, 0x2d, 0xc4, 0x61, 0x48, 0x6a, 0xa1,
	0xae, 0x51, 0x62, 0x48, 0x62, 0x03, 0x07, 0xa7, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x76, 0x26,
	0xed, 0x91, 0x6f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StorageClient is the client API for Storage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageClient interface {
	// Get returns the value associated with the key, and a boolean indicating whether the key exists.
	Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetResp, error)
	// Put adds or updates a key-value pair to the storage.
	Put(ctx context.Context, in *PutReq, opts ...grpc.CallOption) (*PutResp, error)
	// Del removes key from the storage.
	Del(ctx context.Context, in *DelReq, opts ...grpc.CallOption) (*DelResp, error)
}

type storageClient struct {
	cc *grpc.ClientConn
}

func NewStorageClient(cc *grpc.ClientConn) StorageClient {
	return &storageClient{cc}
}

func (c *storageClient) Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetResp, error) {
	out := new(GetResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Put(ctx context.Context, in *PutReq, opts ...grpc.CallOption) (*PutResp, error) {
	out := new(PutResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Del(ctx context.Context, in *DelReq, opts ...grpc.CallOption) (*DelResp, error) {
	out := new(DelResp)
	err := c.cc.Invoke(ctx, "/storage.Storage/Del", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorageServer is the server API for Storage service.
type StorageServer interface {
	// Get returns the value associated with the key, and a boolean indicating whether the key exists.
	Get(context.Context, *GetReq) (*GetResp, error)
	// Put adds or updates a key-value pair to the storage.
	Put(context.Context, *PutReq) (*PutResp, error)
	// Del removes key from the storage.
	Del(context.Context, *DelReq) (*DelResp, error)
}

// UnimplementedStorageServer can be embedded to have forward compatible implementations.
type UnimplementedStorageServer struct {
}

func (*UnimplementedStorageServer) Get(ctx context.Context, req *GetReq) (*GetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedStorageServer) Put(ctx context.Context, req *PutReq) (*PutResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Put not implemented")
}
func (*UnimplementedStorageServer) Del(ctx context.Context, req *DelReq) (*DelResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Del not implemented")
}

func RegisterStorageServer(s *grpc.Server, srv StorageServer) {
	s.RegisterService(&_Storage_serviceDesc, srv)
}

func _Storage_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Get(ctx, req.(*GetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Put(ctx, req.(*PutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Del_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Del(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Del",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Del(ctx, req.(*DelReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Storage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "storage.Storage",
	HandlerType: (*StorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Storage_Get_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _Storage_Put_Handler,
		},
		{
			MethodName: "Del",
			Handler:    _Storage_Del_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/rpc/storage/storage.proto",
}
